{{- if not .Values.useSGXDevPlugin }}
{{- required "A valid '.Values.useSGXDevPlugin' is required: \"enabled\"|\"scone\"|\"azure\"|\"disabled\"" .value }}
{{- else if and (ne .Values.useSGXDevPlugin "enabled") (ne .Values.useSGXDevPlugin "scone") (ne .Values.useSGXDevPlugin "azure") (ne .Values.useSGXDevPlugin "disabled") }}
{{- required "A valid '.Values.useSGXDevPlugin' is required: \"enabled\"|\"scone\"|\"azure\"|\"disabled\"" .value }}
{{- end }}

{{- if and (eq .Values.useSGXDevPlugin "azure") (not .Values.sgxEpcMem) }}
{{- required "Specify '.Values.sgxEpcMem' when using Azure SGX Device Plugin" .value }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  labels:
    {{- include "example.labels" . | nindent 4 }}
    app: server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "example.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "example.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      {{- if eq .Values.useSGXDevPlugin "disabled" }}
        - name: dev-isgx
          hostPath:
            path: {{ .Values.sgxDevicePath }}
      {{- end }}
      containers:
        - name: api
          securityContext:
          {{- if .Values.securityContext }}
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end}}
          {{- if or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled")}}
            capabilities:
              add: ["SYS_RAWIO"]
          {{- else if eq .Values.useSGXDevPlugin "disabled" }}
            privileged: true
          {{- end }}
          image: "{{ .Values.image }}"
          tty: true
          imagePullPolicy: Always
          command: ["python3"]
          ports:
            - name: api
              containerPort: {{ .Values.port }}
              protocol: TCP
          env:
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: {{ .Values.redis.service.port | quote }}
            - name: SCONE_CONFIG_ID
              value: {{ .Values.scone.api_session }}
            - name: SCONE_CAS_ADDR
              value: {{ .Values.scone.cas }}
            - name: SCONE_LAS_ADDR
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: SCONE_LOG
              value: "ERROR"
            - name: SCONE_VERSION
              value: "1"
          volumeMounts:
          {{- if eq .Values.useSGXDevPlugin "disabled" }}
          - name: dev-isgx
            mountPath: {{ .Values.sgxDevicePath }}
          {{- end }}
          {{- if or (or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled")) (eq .Values.useSGXDevPlugin "azure") }}
          resources:
          {{- if or (eq .Values.useSGXDevPlugin "scone") (eq .Values.useSGXDevPlugin "enabled") }}
            limits:
              sgx.k8s.io/sgx: 1
          {{- else if eq .Values.useSGXDevPlugin "azure" }}
            limits:
              kubernetes.azure.com/sgx_epc_mem_in_MiB: {{ .Values.sgxEpcMem }}
          {{- end}}
          {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
